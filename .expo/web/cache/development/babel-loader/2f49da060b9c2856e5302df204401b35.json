{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/kevin/Documents/GitHub/StageIQ/App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, Button } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport CaseHeader from \"./components/Header/CaseHeader\";\nimport NavigationBar from \"./components/Navigation/NavigationBar\";\nimport emptyCaseData from \"./cases/empty-case\";\nexport default function App() {\n  var _useState = useState(\"T\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentStep = _useState2[0],\n      setCurrentStep = _useState2[1];\n\n  var _useState3 = useState(\"Untitled Case\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      caseName = _useState4[0],\n      setCaseName = _useState4[1];\n\n  var _useState5 = useState([null, null, null]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      stage = _useState6[0],\n      setStage = _useState6[1];\n\n  var _useState7 = useState(\"Staging Incomplete\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      caseStagingStatus = _useState8[0],\n      setCaseStagingStatus = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      fiveYearSurvival = _useState10[0],\n      setFiveYearExpectancy = _useState10[1];\n\n  var _useState11 = useState({\n    \"depth\": null,\n    \"ulceration\": null,\n    \"more_than_0.8mm\": null\n  }),\n      _useState12 = _slicedToArray(_useState11, 2),\n      TStage = _useState12[0],\n      setTStage = _useState12[1];\n\n  var _useState13 = useState({\n    \"SLNB\": null,\n    \"clinically_occult\": null,\n    \"lab_confirmed\": null,\n    \"MSI\": null\n  }),\n      _useState14 = _slicedToArray(_useState13, 2),\n      NStage = _useState14[0],\n      setNStage = _useState14[1];\n\n  var _useState15 = useState({\n    \"mets\": null,\n    \"mets_location\": null\n  }),\n      _useState16 = _slicedToArray(_useState15, 2),\n      MStage = _useState16[0],\n      setMStage = _useState16[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, React.createElement(CaseHeader, {\n    caseName: caseName,\n    stage: stage,\n    caseStagingStatus: caseStagingStatus,\n    fiveYearSurvival: fiveYearSurvival,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    onPress: onPressLearnMore,\n    title: \"Learn More\",\n    color: \"#841584\",\n    accessibilityLabel: \"Learn more about this purple button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), React.createElement(NavigationBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 18,\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'flex-start',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/kevin/Documents/GitHub/StageIQ/App.js"],"names":["StatusBar","React","useState","Button","CaseHeader","NavigationBar","emptyCaseData","App","currentStep","setCurrentStep","caseName","setCaseName","stage","setStage","caseStagingStatus","setCaseStagingStatus","fiveYearSurvival","setFiveYearExpectancy","TStage","setTStage","NStage","setNStage","MStage","setMStage","styles","container","onPressLearnMore","StyleSheet","create","paddingHorizontal","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAuC,OAAvC;;;;AAEA,OAAOC,UAAP;AACA,OAAOC,aAAP;AAEA,OAAOC,aAAP;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA,kBACSL,QAAQ,CAAC,GAAD,CADjB;AAAA;AAAA,MACrBM,WADqB;AAAA,MACRC,cADQ;;AAAA,mBAIIP,QAAQ,CAAC,eAAD,CAJZ;AAAA;AAAA,MAIrBQ,QAJqB;AAAA,MAIXC,WAJW;;AAAA,mBAKFT,QAAQ,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAAD,CALN;AAAA;AAAA,MAKrBU,KALqB;AAAA,MAKdC,QALc;;AAAA,mBAMsBX,QAAQ,CAAC,oBAAD,CAN9B;AAAA;AAAA,MAMrBY,iBANqB;AAAA,MAMFC,oBANE;;AAAA,mBAOsBb,QAAQ,CAAC,IAAD,CAP9B;AAAA;AAAA,MAOrBc,gBAPqB;AAAA,MAOHC,qBAPG;;AAAA,oBAUAf,QAAQ,CAAC;AACnC,aAAS,IAD0B;AAEnC,kBAAc,IAFqB;AAGnC,uBAAmB;AAHgB,GAAD,CAVR;AAAA;AAAA,MAUrBgB,MAVqB;AAAA,MAUbC,SAVa;;AAAA,oBAgBAjB,QAAQ,CAAC;AACjC,YAAQ,IADyB;AAEjC,yBAAqB,IAFY;AAGjC,qBAAiB,IAHgB;AAIjC,WAAO;AAJ0B,GAAD,CAhBR;AAAA;AAAA,MAgBrBkB,MAhBqB;AAAA,MAgBbC,SAhBa;;AAAA,oBAsBAnB,QAAQ,CAAC;AACnC,YAAQ,IAD2B;AAEnC,qBAAiB;AAFkB,GAAD,CAtBR;AAAA;AAAA,MAsBrBoB,MAtBqB;AAAA,MAsBbC,SAtBa;;AA2B5B,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AACE,IAAA,QAAQ,EAAIf,QADd;AAEE,IAAA,KAAK,EAAIE,KAFX;AAGE,IAAA,iBAAiB,EAAIE,iBAHvB;AAIE,IAAA,gBAAgB,EAAIE,gBAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAEU,gBADX;AAEE,IAAA,KAAK,EAAC,YAFR;AAGE,IAAA,KAAK,EAAC,SAHR;AAIE,IAAA,kBAAkB,EAAC,qCAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAaE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,EAcE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,CADF;AAkBD;AAED,IAAMF,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,SAAS,EAAE;AACTI,IAAAA,iBAAiB,EAAE,EADV;AAETC,IAAAA,IAAI,EAAE,CAFG;AAGTC,IAAAA,eAAe,EAAE,MAHR;AAITC,IAAAA,UAAU,EAAE,YAJH;AAKTC,IAAAA,cAAc,EAAE;AALP;AADoB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState, Button} from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport CaseHeader from './components/Header/CaseHeader';\nimport NavigationBar from './components/Navigation/NavigationBar';\n\nimport emptyCaseData from './cases/empty-case';\n\nexport default function App() {\n  const [currentStep, setCurrentStep]= useState(\"T\");\n  // TOOD: should load default data from here\n  // header\n  const [caseName, setCaseName] = useState(\"Untitled Case\");\n  const [stage, setStage] = useState([null, null, null]);\n  const [caseStagingStatus, setCaseStagingStatus] = useState(\"Staging Incomplete\");\n  const [fiveYearSurvival, setFiveYearExpectancy] = useState(null);\n\n  // T Stage\n  const [TStage, setTStage] = useState({\n    \"depth\": null,\n    \"ulceration\": null,\n    \"more_than_0.8mm\": null,\n  });\n\n  const [NStage, setNStage] = useState({\n      \"SLNB\": null,\n      \"clinically_occult\": null,\n      \"lab_confirmed\": null,\n      \"MSI\": null\n  })\n  const [MStage, setMStage] = useState({\n    \"mets\": null,\n    \"mets_location\": null\n  })\n\n  return (\n    <View style={styles.container}>\n      <CaseHeader \n        caseName = {caseName}\n        stage = {stage}\n        caseStagingStatus = {caseStagingStatus}\n        fiveYearSurvival = {fiveYearSurvival}/>\n\n      <Button\n        onPress={onPressLearnMore}\n        title=\"Learn More\"\n        color=\"#841584\"\n        accessibilityLabel=\"Learn more about this purple button\"\n      />\n      <NavigationBar />\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 18,\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}